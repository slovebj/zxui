// Base class
//
// Requires one of the contextual, color modifier classes for `color` and
// `background-color`.

.tag {
  position: relative;
  display: inline-block;
  padding: $tag-padding-y $tag-padding-x;
  font-size: $tag-font-size;
  color: $tag-color;
  background-color: $btn-primary-bg;
  text-align: center;
  white-space: nowrap;
  @include border-radius();

  // Empty tags collapse automatically
  &:empty {
    display: none;
  }
}
.tag-join{
    display: inline-block;
}
.tag-join img{
    width: auto;
    height:1.25em;
    vertical-align: text-bottom;
}
.tag-join>.tag{
    margin-left: 0;
    border-radius:0;
}
.tag-join>:first-child{
    border-radius:.25rem 0 0 .25rem;
}
.tag-join>:last-child{
    border-radius:0 .25rem .25rem 0;
}
.tag-a:before,.tags.tag-a .tag:before {
    position: absolute;
    content: '';
    transform: translateY(-50%) translateX(50%) rotate(-45deg);
    right: 100%;
    top: 50%;
    background-color: inherit;
    width: 1.0em;
    height: 1.0em;
}

.tag-a:after,.tags.tag-a .tag:after{
    position: absolute;
    content: '';
    left: 0;
    margin-top: 0.56em;
    background-color: #FFF!important;
    width: 0.4em;
    height: 0.4em;
    box-shadow: 0 -1px 1px 0 rgba(0,0,0,.3);
    border-radius: 500rem;
}

.tag.tag-a,.tags.tag-a .tag{
	padding-left: 1.2em;
	padding-right: 1em;
    margin-left: 0.7em;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;

}

 .tag.tag-o,.tag.tag-op,.tags.tag-o .tag,.tags.tag-op .tag {
  color: $btn-primary-bg;
  background-color: transparent;
  border:1px solid;
  border-color: currentColor;
}

// scss-lint:disable QualifyingElement
// Add hover effects, but only for links
a.tag:not([class*="tag-o"]){
  @include hover-focus {
    opacity: .75;
    text-decoration: none;
    color:#fff;
    cursor: pointer;
  }
}

a.tag[class*="tag-o"],.tags.tag-o a.tag,.tags.tag-op a.tag {
  @include hover-focus {
    color:currentColor;
  }
}

// Pill tags
//
// Make them extra rounded with a modifier to replace v3's badges.
.tag.tag-p,.tags.tag-p .tag {
  background-color: $btn-primary-bg;
}
.tag.tag-p,.tag.tag-op,.tags.tag-p .tag,.tags.tag-op .tag {
  padding-right: $tag-pill-padding-x;
  padding-left: $tag-pill-padding-x;
  @include border-radius($tag-pill-border-radius);
}

.tag-sup {
	position: absolute;
	z-index: 100;
	top: -.8em;
	right: -.8em;
}

.tag-c {
	position: absolute;
	display: block;
    top: 0;
    margin: 0;
    font-size: 1em;
    padding:0.2em 0.4rem;
    width: 3.1em;
    height: 3.1em;
    z-index: 1;
    background-color: transparent!important;
}
.left.tag-c {
    left: 0;
    text-align: left;
}

.right.tag-c {
    right: 0;
    text-align: right;
}
.tag-c:after {
    position: absolute;
    content: "";
    right: 0;
    top: 0;
    z-index: -1;
    width: 0;
    height: 0;
    background-color: transparent!important;
}

.left.tag-c:after {
    border-left: 3.1em solid;
    border-bottom: 3.1em solid transparent;
    border-left-color: inherit;
}

.right.tag-c:after {
    border-right: 3em solid;
    border-bottom: 3em solid transparent;
    border-right-color: inherit;
}

.tag-r,.tag-at {
	position: absolute;
	display: block;
    padding:0.5em 2em;
    z-index: 1;
    border-radius: 0;
}
.tag-r {
    top: $grid-gutter-width/2;
}
.left.tag-r {
    left: -$grid-gutter-width/2 + 1px;
}

.right.tag-r {
    right: -$grid-gutter-width/2 + 1px;
}
.tag-r:before {
    position: absolute;
    content: "";
    top: 100%;
    width: 0;
    height: 0;
    border-bottom: $grid-gutter-width/2 solid transparent;
}

.right.tag-r:before {
    border-left: $grid-gutter-width/2 solid;
    border-left-color: inherit;
    right: 0;
}

.left.tag-r:before {
    border-right: $grid-gutter-width/2 solid;
    border-right-color: inherit;
    left: 0;
}

.tag-at:not([class*="l0"]):not([class*="r0"]) {
    width: 100%;
    left: 0;
    right: 0;
}

.tags{
  position: relative;
  display: inline-block;

  > img {
    height: 1.125em;
    width: auto;
    vertical-align: text-bottom;
  }
}


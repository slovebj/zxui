// scss-lint:disable QualifyingElement

//
// Textual form ctrls
//

.form-ctrl {
  display: block;
  width: 100%;

  // // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  // height: $input-height;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  color: $input-color;
  background-color: $input-bg;
  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
  background-image: none;
  background-clip: padding-box;
  border: $input-btn-border-width solid $input-border-color;
  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @include border-radius($input-border-radius);
  @include box-shadow($input-box-shadow);
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-ctrl-focus();

  // Placeholder
  &::placeholder {
    color: $input-color-placeholder;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that ctrls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-bg-disabled;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }

  &:disabled {
    cursor: $cursor-disabled;
  }
}

.form-ctrl:not(textarea) {
    height: $input-ctrl-height;
}
select[multiple]{
    height: auto;
    overflow-y: scroll;
}

//
// Legends
//

// For use with horizontal and inline forms, when you need the legend text to
// be the same size as regular labels, and to align with the form ctrls.
.form-ctrl-legend {
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0;
  font-size: $font-size-base;
}



// Form ctrl sizing
//
// Build on `.form-ctrl` with modifier classes to decrease or increase the
// height and font-size of form ctrls.
//
// The `.form-group-* form-ctrl` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

.form-ctrl-sm {
  height: 1.5rem !important;
  font-size: $font-size-sm;
  @include border-radius($input-border-radius-sm);
}

.form-ctrl-lg {
  padding: $input-padding-y-lg $input-padding-x-lg;
  height: 3rem  !important;
  font-size: 1.5rem;
  @include border-radius($input-border-radius-lg);
}

.form-ctrl.icon-l {
  padding-left: 2em;
}
.form-ctrl.icon-r {
  padding-right: 2em;
}
.form-ctrl.icon-lr {
  padding-left: 2em;
  padding-right: 2em;
}
.form-ctrl~i {
  display: inline-block;
  position: absolute;
  font-size: 1rem;
  top: 0;
  width: 2rem;
  line-height: 2rem;
  height: 2rem;
  color: $input-color;
}
.form-ctrl-sm~i {
  font-size: $font-size-sm;
  line-height: 1.5rem;
  width: 1.5rem;
  height: 1.5rem;
}
.form-ctrl-lg~i {
  font-size: 1.5rem;
  line-height: 3rem;
  width:3rem;
  height: 3rem;
}
// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: $form-group-margin-bottom;
  position: relative;
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging ctrls.


// Apply contextual and semantic states to individual form ctrls.

[class*="fg"] .form-ctrl{
  border-color: currentColor;
  color: inherit;
}


.form-inline {

  // Kick in the inline
  @include media-breakpoint-up(sm) {
    // Inline-block all the things for "inline"
    .form-group {
      display: inline-block;
      height: 2rem;
    }

    // Allow folks to *not* use `.form-group`
    .form-ctrl {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-addon,
      .input-btn,
      .form-ctrl {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-ctrl {
      width: 100%;
    }

  }
}

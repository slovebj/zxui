// scss-lint:disable QualifyingElement

//
// Textual form ctrls
//

.form-ctrl {
  display: block;
  width: 100%;
  // // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  // height: $input-height;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
  background-image: none;
  background-clip: padding-box;
  border: $input-btn-border-width solid $input-border-color;
  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @include border-radius($input-border-radius);
  @include box-shadow($input-box-shadow);
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-ctrl-focus();

  // Placeholder
  &::placeholder {
    color: $input-color-placeholder;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that ctrls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-bg-disabled;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }

  &:disabled {
    cursor: $cursor-disabled;
  }
}

select.form-ctrl {
  &:not([size]):not([multiple]) {
    height: $input-height;
  }
}

// Make file inputs better match text inputs by forcing them to new lines.
.form-ctrl-file,
.form-ctrl-range {
  display: block;
}


//
// Labels
//

// For use with horizontal and inline forms, when you need the label text to
// align with the form ctrls.
.form-ctrl-label {
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0; // Override the `<label>` default
}

//
// Legends
//

// For use with horizontal and inline forms, when you need the legend text to
// be the same size as regular labels, and to align with the form ctrls.
.form-ctrl-legend {
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0;
  font-size: $font-size-base;
}


// Todo: clear this up

// Special styles for iOS temporal inputs
//
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned. As a workaround, we
// set a pixel line-height that matches the given height of the input, but only
// for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
//
// Note that as of 8.3, iOS doesn't support `week`.

_::-webkit-full-page-media, // Hack to make this CSS be Safari-only; see http://browserbu.gs/css-hacks/webkit-full-page-media/
input[type="date"],
input[type="time"],
input[type="datetime-locale"],
input[type="month"] {
  &.form-ctrl {
    line-height: $input-height;
  }

  &.input-sm,
  .input-group-sm &.form-ctrl {
    line-height: $input-height-sm;
  }

  &.input-lg,
  .input-group-lg &.form-ctrl {
    line-height: $input-height-lg;
  }
}


// Static form ctrl text
//
// Apply class to an element to make any string of text align with labels in a
// horizontal form layout.

.form-ctrl-static {
  min-height: $input-height;
  // Size it appropriately next to real form ctrls
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  // Remove default margin from `p`
  margin-bottom: 0;

  &.form-ctrl-sm,
  &.form-ctrl-lg {
    padding-right: 0;
    padding-left: 0;
  }
}


// Form ctrl sizing
//
// Build on `.form-ctrl` with modifier classes to decrease or increase the
// height and font-size of form ctrls.
//
// The `.form-group-* form-ctrl` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

.form-ctrl-sm {
  padding: $input-padding-y-sm $input-padding-x-sm;
  font-size: $font-size-sm;
  @include border-radius($input-border-radius-sm);
}

.form-ctrl-lg {
  padding: $input-padding-y-lg $input-padding-x-lg;
  font-size: $font-size-lg;
  @include border-radius($input-border-radius-lg);
}


// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: $form-group-margin-bottom;
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging ctrls.


// Apply contextual and semantic states to individual form ctrls.

[class*="fg"] .form-ctrl{
  border-color: currentColor;
  color: inherit;
}





// .form-ctrl-success {
//   background-image: $form-icon-success;
//   border-color: $brand-success;
// }
//
// .form-ctrl-warning {
//   background-image: $form-icon-warning;
//   border-color: $brand-warning;
// }
//
// .form-ctrl-error {
//   background-image: $form-icon-danger;
//   border-color: $brand-danger;
// }


// .has-feedback {
//   // Enable absolute positioning
//   position: relative;
//
//   // Ensure icons don't overlap text
//   .form-ctrl {
//     padding-right: ($input-height * 1.25);
//   }
// }
// // Feedback icon
// .form-ctrl-feedback {
//   position: absolute;
//   top: 0;
//   right: 0;
//   z-index: 2; // Ensure icon is above input groups
//   display: block;
//   width: $input-height;
//   height: $input-height;
//   line-height: $input-height;
//   text-align: center;
//   pointer-events: none;
// }
// .input-lg + .form-ctrl-feedback,
// .input-group-lg + .form-ctrl-feedback {
//   width: $input-height-lg;
//   height: $input-height-lg;
//   line-height: $input-height-lg;
// }
// .input-sm + .form-ctrl-feedback,
// .input-group-sm + .form-ctrl-feedback {
//   width: $input-height-sm;
//   height: $input-height-sm;
//   line-height: $input-height-sm;
// }
//
// // Form validation states
// .has-success {
//   @include form-ctrl-validation($state-success-text, $state-success-text, $state-success-bg);
// }
// .has-warning {
//   @include form-ctrl-validation($state-warning-text, $state-warning-text, $state-warning-bg);
// }
// .has-danger {
//   @include form-ctrl-validation($state-danger-text, $state-danger-text, $state-danger-bg);
// }
//
// // Reposition feedback icon if input has visible label above
// .has-feedback label {
//
//   ~ .form-ctrl-feedback {
//     // TODO: redo this since we nuked the `$line-height-computed`
//     top: 0; // Height of the `label` and its margin
//   }
//
//   &.sr-only ~ .form-ctrl-feedback {
//     top: 0;
//   }
// }


// Inline forms
//
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form ctrls and our custom form ctrls (e.g., input groups).

.form-inline {

  // Kick in the inline
  @include media-breakpoint-up(sm) {
    // Inline-block all the things for "inline"
    .form-group {
      display: inline-block;
    }

    // Allow folks to *not* use `.form-group`
    .form-ctrl {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
    }

    // Make static ctrls behave like regular ones
    .form-ctrl-static {
      display: inline-block;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-addon,
      .input-btn,
      .form-ctrl {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-ctrl {
      width: 100%;
    }

    .form-ctrl-label {
      margin-bottom: 0;
      vertical-align: middle;
    }


    // Re-override the feedback icon.
    .has-feedback .form-ctrl-feedback {
      top: 0;
    }
  }
}
